(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[322],{63:(e,t,r)=>{"use strict";var s=r(7260);r.o(s,"useParams")&&r.d(t,{useParams:function(){return s.useParams}}),r.o(s,"useRouter")&&r.d(t,{useRouter:function(){return s.useRouter}})},3142:(e,t,r)=>{Promise.resolve().then(r.bind(r,6593))},6593:(e,t,r)=>{"use strict";r.r(t),r.d(t,{default:()=>o});var s=r(5155),a=r(2115),n=r(63);function o(){let[e,t]=(0,a.useState)(""),[r,o]=(0,a.useState)(null),[l,u]=(0,a.useState)(!1),i=(0,n.useRouter)();async function c(){o(null),u(!0);try{let t=new URLSearchParams({url:e}),r=await fetch("/api/extract?".concat(t)),s=await r.json();if(!r.ok)throw Error(s.error||"Failed to extract");let a={title:s.title||"Imported Prompt",body:s.body||"",tags:[],sourceUrl:e,visibility:"public"};sessionStorage.setItem("gh_new_prompt_draft",JSON.stringify(a)),i.push("/new")}catch(e){o(e instanceof Error?e.message:"Failed")}finally{u(!1)}}return(0,s.jsxs)("div",{className:"mx-auto max-w-[720px] py-8",children:[(0,s.jsx)("h1",{className:"font-display text-2xl mb-4",children:"Import from Link"}),(0,s.jsxs)("div",{className:"space-y-3",children:[(0,s.jsx)("input",{placeholder:"Paste URL",value:e,onChange:e=>t(e.target.value),className:"w-full rounded-[12px] bg-[var(--gh-surface)] border border-[var(--gh-border)] px-3 py-2 text-sm"}),r&&(0,s.jsx)("div",{className:"text-sm text-red-400",children:r}),(0,s.jsx)("button",{onClick:c,disabled:l,className:"rounded-[12px] px-4 py-2 text-sm bg-[var(--gh-cyan)] text-black",children:l?"Importingâ€¦":"Import"})]})]})}}},e=>{e.O(0,[441,255,358],()=>e(e.s=3142)),_N_E=e.O()}]);